<?xml version="1.0"?>
<ruleset name="MyStandard">
    <description>A custom coding standard</description>

    <!-- file -->
    <file>./src</file>
    <file>./tests</file>

    <!-- arg -->
    <arg name="report-summary"/>
    <arg name="report-full"/>
    <arg value="sp"/>

    <!-- Base rule -->
    <rule ref="Motionpicture"/>

    <rule ref="SlevomatCodingStandard.Commenting.DocCommentSpacing">
        <properties>
            <!-- Add vendor annotations -->
            <property name="annotationsGroups" type="array">
                <element value="
                    @internal,
                    @deprecated,
                    @todo,
                "/>
                <element value="
                    @link,
                    @see,
                    @uses,
                "/>

                <!-- Vendor annotations -->
                <element value="@ORM\"/>

                <!-- PHPUnit annotations -->
                <element value="
                    @runInSeparateProcess,
                    @preserveGlobalState,
                    @test,
                "/>

                <element value="
                    @param,
                    @return,
                "/>
                <element value="@throws"/>
            </property>
        </properties>
    </rule>

    <!-- Forbid assignments in conditions -->
    <rule ref="SlevomatCodingStandard.ControlStructures.AssignmentInCondition"/>
    <!-- Require consistent spacing for block structures -->
    <rule ref="SlevomatCodingStandard.ControlStructures.BlockControlStructureSpacing"/>
    <!-- Forbid fancy yoda conditions -->
    <rule ref="SlevomatCodingStandard.ControlStructures.DisallowYodaComparison"/>
    <!-- Require usage of early exit -->
    <rule ref="SlevomatCodingStandard.ControlStructures.EarlyExit"/>
    <!-- Require consistent spacing for jump statements -->
    <rule ref="SlevomatCodingStandard.ControlStructures.JumpStatementsSpacing">
        <properties>
            <property name="linesCountBeforeWhenFirstInCaseOrDefault" value="0"/>
            <property name="linesCountAfterWhenLastInCaseOrDefault" value="1"/>
            <property name="linesCountAfterWhenLastInLastCaseOrDefault" value="0"/>
        </properties>
    </rule>
    <!-- Require language constructs without parentheses -->
    <rule ref="SlevomatCodingStandard.ControlStructures.LanguageConstructWithParentheses"/>
    <!-- Require usage of null coalesce operator equal operator when possible -->
    <rule ref="SlevomatCodingStandard.ControlStructures.RequireNullCoalesceEqualOperator"/>
    <!-- Require usage of null coalesce operator when possible -->
    <rule ref="SlevomatCodingStandard.ControlStructures.RequireNullCoalesceOperator"/>
    <!-- Forbid usage of conditions when a simple return can be used -->
    <rule ref="SlevomatCodingStandard.ControlStructures.UselessIfConditionWithReturn"/>
    <!-- Forbid usage of boolean-only ternary operator usage (e.g. $foo ? true : false) -->
    <rule ref="SlevomatCodingStandard.ControlStructures.UselessTernaryOperator"/>
</ruleset>
